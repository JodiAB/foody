import React, { useState, useEffect } from 'react';
import { View, Text, Image, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';
import { Ionicons, MaterialIcons, Feather } from '@expo/vector-icons';
import { SafeAreaView } from 'react-native-safe-area-context';
import { account, storage } from '@/lib/appwrite';
import  useAuthStore  from '@/store/auth.store';

export default function ProfileScreen() {
const { user, logout } = useAuthStore();
const [name, setName] = useState('');
const [email, setEmail] = useState('');
const [phone, setPhone] = useState('');
const [address1, setAddress1] = useState('');
const [address2, setAddress2] = useState('');
const [profileImage, setProfileImage] = useState('');
const [loading, setLoading] = useState(true);

useEffect(() => {
    const fetchUserData = async () => {
    if (user) {
setName(user.name || 'User');
setEmail(user.email || 'No email');
setPhone(user.phone || 'No phone');
setAddress1(user.address1 || 'No address');
setAddress2(user.address2 || 'No address');
setProfileImage(user.profileImage || '');
setLoading(false);
}
};
fetchUserData();
}, [user]);

    const getInitials = () => {
    if (!name) return 'U';
    const names = name.split(' ');
return names.length > 1 ? names[0][0] + names[1][0] : names[0][0];
};

    const handleEditProfile = () => {
console.log('Edit profile clicked');
};

    const handleLogout = () => {
logout();
};

    if (loading) {
    return (
    <View className="flex-1 flex-center">
    <ActivityIndicator size="large" color="#FFA726" />
    </View>
);
}

    return (
    <SafeAreaView className="flex-1 bg-white">
{/* Top Nav */}
<View className="flex-between mx-4 my-4">
<TouchableOpacity onPress={() => console.log('Back pressed')}>
<Ionicons name="arrow-back" size={24} color="black" />
</TouchableOpacity>
<Text className="base-bold">Profile</Text>
<TouchableOpacity onPress={() => console.log('Search pressed')}>
<Feather name="search" size={24} color="black" />
</TouchableOpacity>
</View>

<ScrollView contentContainerStyle={styles.content}>
                                                  {/* Profile Picture */}
<View className="mt-5 flex-center">
{profileImage ? (
<Image
source={{ uri: profileImage }}
    className="profile-avatar"
    onError={() => setProfileImage('')}
/>
) : (
<View className="profile-avatar bg-primary/10 flex items-center justify-center">
<Text className="text-3xl font-quicksand-bold text-white">{getInitials()}</Text>
</View>
)}
<TouchableOpacity className="profile-edit" onPress={handleEditProfile}>
<MaterialIcons name="edit" size={16} color="#fff" />
</TouchableOpacity>
</View>

{/* Profile Info */}
<View className="bg-gray-100 p-5 m-5 rounded-xl w-[90%]">
<InfoItem icon="person" label="Full Name" value={name} />
<InfoItem icon="email" label="Email" value={email} />
<InfoItem icon="call" label="Phone number" value={phone} />
<InfoItem icon="location-on" label="Address 1 - (Home)" value={address1} />
<InfoItem icon="location-on" label="Address 2 - (Work)" value={address2} />
</View>

{/* Buttons */}
<TouchableOpacity className="bg-amber-200 p-3.5 px-7 rounded-full border border-amber-500 mt-5" onPress={handleEditProfile}>
<Text className="text-amber-500 paragraph-semibold">Edit Profile</Text>
</TouchableOpacity>

<TouchableOpacity className="bg-red-200 p-3.5 px-7 rounded-full border border-red-500 mt-5" onPress={handleLogout}>
<Text className="text-red-500 paragraph-semibold">Logout</Text>
</TouchableOpacity>
</ScrollView>
</SafeAreaView>
);
}

const InfoItem = ({ icon, label, value }) => (
<View className="flex-row items-start mb-5">
<MaterialIcons name={icon} size={22} color="#FFA726" className="mr-3 mt-1" />
<View>
<Text className="body-medium text-gray-500">{label}</Text>
<Text className="paragraph-semibold text-gray-800">{value || 'Not set'}</Text>
</View>
</View>
);

// Note: Since NativeWind doesn't use StyleSheet.create directly, styles are applied via className
const styles = {
    content: {
    alignItems: 'center',
    paddingBottom: 30,
},
};